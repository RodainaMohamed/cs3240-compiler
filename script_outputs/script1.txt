<file-names> ::= <source-file> $GRTNOT <destination-file>
<MiniRE-program> ::= $BEGIN <statement-list> $END
<statement-list-tail> ::= <statement> <statement-list-tail> | <epsilon>
<file-name> ::= $ASCII-STR
<source-file> ::= $ASCII-STR
<statement> ::= $PRINT $OPENPARENS <exp-list> $CLOSEPARENS $SEMICOLON | $RECREP $REGEX $WITH $ASCII-STR $IN <file-names> $SEMICOLON | $REPLACE $REGEX $WITH $ASCII-STR $IN <file-names> $SEMICOLON | $ID $EQ <statement-righthand> $SEMICOLON
<exp-list> ::= <exp> <exp-list-tail>
<exp> ::= $OPENPARENS <exp> $CLOSEPARENS | <term> <exp-tail> | $ID
<term> ::= $FIND $REGEX $IN <file-name>
<exp-tail> ::= <epsilon> | <bin-op> <term> <exp-tail>
<statement-list> ::= <statement> <statement-list-tail>
<exp-list-tail> ::= <epsilon> | $COMMA <exp> <exp-list-tail>
<bin-op> ::= $DIFF | $INTERS | $UNION
<statement-righthand> ::= $MAXFREQ $OPENPARENS $ID $CLOSEPARENS | <exp> | $HASH <exp>
<destination-file> ::= $ASCII-STR

First(<file-names>) = [$ASCII-STR]
First(<MiniRE-program>) = [$BEGIN]
First(<statement-list-tail>) = [$PRINT, $ID, $RECREP, $REPLACE, <epsilon>]
First(<file-name>) = [$ASCII-STR]
First(<source-file>) = [$ASCII-STR]
First(<statement>) = [$ID, $PRINT, $RECREP, $REPLACE]
First(<exp-list>) = [$ID, $FIND, $OPENPARENS]
First(<exp>) = [$ID, $FIND, $OPENPARENS]
First(<term>) = [$FIND]
First(<exp-tail>) = [$UNION, $INTERS, <epsilon>, $DIFF]
First(<statement-list>) = [$PRINT, $ID, $RECREP, $REPLACE]
First(<exp-list-tail>) = [$COMMA, <epsilon>]
First(<bin-op>) = [$UNION, $INTERS, $DIFF]
First(<statement-righthand>) = [$HASH, $MAXFREQ, $ID, $FIND, $OPENPARENS]
First(<destination-file>) = [$ASCII-STR]

Follow(<file-names>) = [$SEMICOLON]
Follow(<MiniRE-program>) = [$]
Follow(<statement-list-tail>) = [$END]
Follow(<file-name>) = [$COMMA, $UNION, $INTERS, $CLOSEPARENS, $SEMICOLON, $DIFF]
Follow(<source-file>) = [$GRTNOT]
Follow(<statement>) = [$PRINT, $ID, $RECREP, $REPLACE, $END]
Follow(<exp-list>) = [$CLOSEPARENS]
Follow(<exp>) = [$COMMA, $CLOSEPARENS, $SEMICOLON]
Follow(<term>) = [$COMMA, $UNION, $INTERS, $CLOSEPARENS, $SEMICOLON, $DIFF]
Follow(<exp-tail>) = [$COMMA, $CLOSEPARENS, $SEMICOLON]
Follow(<statement-list>) = [$END]
Follow(<exp-list-tail>) = [$CLOSEPARENS]
Follow(<bin-op>) = [$FIND]
Follow(<statement-righthand>) = [$SEMICOLON]
Follow(<destination-file>) = [$SEMICOLON]

      Variable         $TEST                         $ASCII-STR                                               $BEGIN                                       $END                  $EQ                                    $REPLACE                                    $WITH  $IN         $SEMICOLON                                           $RECREP                                    $GRTNOT                                 $PRINT                                                $OPENPARENS                         $CLOSEPARENS                                $COMMA                                       $HASH                                   $FIND                                     $DIFF                                     $UNION                                     $INTERS                                              $MAXFREQ                              $REGEX                              $ID                              $NUMBER  $ 

  <MiniRE-program>      ~~                               ~~                              <MiniRE-program> ::= $BEGIN <statement-list> $END                  ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~                                ~~                                 ~~     ~~
  <statement-list>      ~~                               ~~                                                     ~~                                          ~~                   ~~              <statement-list> ::= <statement> <statement-list-tail>              ~~    ~~              ~~                       <statement-list> ::= <statement> <statement-list-tail>               ~~            <statement-list> ::= <statement> <statement-list-tail>                             ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~      <statement-list> ::= <statement> <statement-list-tail>       ~~     ~~
<statement-list-tail>   ~~                               ~~                                                     ~~                          <statement-list-tail> ::= <epsilon>  ~~           <statement-list-tail> ::= <statement> <statement-list-tail>            ~~    ~~              ~~                     <statement-list-tail> ::= <statement> <statement-list-tail>            ~~          <statement-list-tail> ::= <statement> <statement-list-tail>                          ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~    <statement-list-tail> ::= <statement> <statement-list-tail>    ~~     ~~
     <statement>        ~~                               ~~                                                     ~~                                          ~~                   ~~   <statement> ::= $REPLACE $REGEX $WITH $ASCII-STR $IN <file-names> $SEMICOLON   ~~    ~~              ~~             <statement> ::= $RECREP $REGEX $WITH $ASCII-STR $IN <file-names> $SEMICOLON    ~~     <statement> ::= $PRINT $OPENPARENS <exp-list> $CLOSEPARENS $SEMICOLON                     ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~     <statement> ::= $ID $EQ <statement-righthand> $SEMICOLON      ~~     ~~
<statement-righthand>   ~~                               ~~                                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                        <statement-righthand> ::= <exp>                    ~~                                       ~~                         <statement-righthand> ::= $HASH <exp>      <statement-righthand> ::= <exp>                         ~~                                         ~~                                         ~~                      <statement-righthand> ::= $MAXFREQ $OPENPARENS $ID $CLOSEPARENS    ~~                  <statement-righthand> ::= <exp>                  ~~     ~~
    <file-names>        ~~    <file-names> ::= <source-file> $GRTNOT <destination-file>                         ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~                                ~~                                 ~~     ~~
    <source-file>       ~~                  <source-file> ::= $ASCII-STR                                        ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~                                ~~                                 ~~     ~~
 <destination-file>     ~~                <destination-file> ::= $ASCII-STR                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~                                ~~                                 ~~     ~~
     <exp-list>         ~~                               ~~                                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                      <exp-list> ::= <exp> <exp-list-tail>                 ~~                                       ~~                                          ~~                     <exp-list> ::= <exp> <exp-list-tail>                       ~~                                         ~~                                         ~~                                                    ~~                                   ~~               <exp-list> ::= <exp> <exp-list-tail>                ~~     ~~
   <exp-list-tail>      ~~                               ~~                                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                     <exp-list-tail> ::= <epsilon>  <exp-list-tail> ::= $COMMA <exp> <exp-list-tail>                   ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~                                ~~                                 ~~     ~~
        <exp>           ~~                               ~~                                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                    <exp> ::= $OPENPARENS <exp> $CLOSEPARENS               ~~                                       ~~                                          ~~                          <exp> ::= <term> <exp-tail>                           ~~                                         ~~                                         ~~                                                    ~~                                   ~~                           <exp> ::= $ID                           ~~     ~~
     <exp-tail>         ~~                               ~~                                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~   <exp-tail> ::= <epsilon>                                      ~~                                         ~~                                      ~~                                                       ~~                       <exp-tail> ::= <epsilon>                 <exp-tail> ::= <epsilon>                               ~~                                      ~~                     <exp-tail> ::= <bin-op> <term> <exp-tail>  <exp-tail> ::= <bin-op> <term> <exp-tail>  <exp-tail> ::= <bin-op> <term> <exp-tail>                                ~~                                   ~~                                ~~                                 ~~     ~~
       <term>           ~~                               ~~                                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                                  ~~                                       ~~                                          ~~                    <term> ::= $FIND $REGEX $IN <file-name>                     ~~                                         ~~                                         ~~                                                    ~~                                   ~~                                ~~                                 ~~     ~~
     <file-name>        ~~                   <file-name> ::= $ASCII-STR                                         ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                                  ~~                                       ~~                                          ~~                                      ~~                                        ~~                                         ~~                                         ~~                                                    ~~                                   ~~                                ~~                                 ~~     ~~
      <bin-op>          ~~                               ~~                                                     ~~                                          ~~                   ~~                                        ~~                                        ~~    ~~              ~~                                                 ~~                                         ~~                                      ~~                                                       ~~                                  ~~                                       ~~                                          ~~                                      ~~                                <bin-op> ::= $DIFF                         <bin-op> ::= $UNION                       <bin-op> ::= $INTERS                                           ~~                                   ~~                                ~~                                 ~~     ~~

[$, <MiniRE-program>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
^^^^^
[$, $END, <statement-list>, $BEGIN]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
^^^^^
[$, $END, <statement-list>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
      ^^^^^^^
[$, $END, <statement-list-tail>, <statement>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
      ^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <statement-righthand>, $EQ, $ID]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
      ^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <statement-righthand>, $EQ]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
              ^
[$, $END, <statement-list-tail>, $SEMICOLON, <statement-righthand>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                ^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                ^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <term>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                ^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>, $IN, $REGEX, $FIND]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                ^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>, $IN, $REGEX]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>, $IN]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                    ^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                       ^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, $ASCII-STR]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                       ^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                    ^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <term>, <bin-op>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                    ^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <term>, $INTERS]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                    ^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <term>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                           ^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>, $IN, $REGEX, $FIND]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                           ^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>, $IN, $REGEX]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                ^^^^^^^^^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>, $IN]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                     ^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, <file-name>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                        ^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>, $ASCII-STR]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                        ^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp-tail>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                     ^
[$, $END, <statement-list-tail>, $SEMICOLON, <epsilon>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                     ^
[$, $END, <statement-list-tail>, $SEMICOLON]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                     ^
[$, $END, <statement-list-tail>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                       ^^^^^^^^^
[$, $END, <statement-list-tail>, <statement>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                       ^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <statement-righthand>, $EQ, $ID]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                       ^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <statement-righthand>, $EQ]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                 ^
[$, $END, <statement-list-tail>, $SEMICOLON, <statement-righthand>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                   ^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp>, $HASH]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                   ^
[$, $END, <statement-list-tail>, $SEMICOLON, <exp>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                     ^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, $ID]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                     ^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                             ^
[$, $END, <statement-list-tail>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                               ^^^^^
[$, $END, <statement-list-tail>, <statement>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                               ^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS, <exp-list>, $OPENPARENS, $PRINT]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                               ^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS, <exp-list>, $OPENPARENS]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                     ^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS, <exp-list>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                       ^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS, <exp-list-tail>, <exp>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                       ^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS, <exp-list-tail>, $ID]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                       ^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS, <exp-list-tail>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                 ^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS, <epsilon>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                 ^
[$, $END, <statement-list-tail>, $SEMICOLON, $CLOSEPARENS]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                 ^
[$, $END, <statement-list-tail>, $SEMICOLON]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                   ^
[$, $END, <statement-list-tail>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                     ^^^^^^^
[$, $END, <statement-list-tail>, <statement>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                     ^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <file-names>, $IN, $ASCII-STR, $WITH, $REGEX, $REPLACE]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                     ^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <file-names>, $IN, $ASCII-STR, $WITH, $REGEX]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                             ^^^^^^^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <file-names>, $IN, $ASCII-STR, $WITH]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                ^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <file-names>, $IN, $ASCII-STR]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                     ^^
[$, $END, <statement-list-tail>, $SEMICOLON, <file-names>, $IN]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                        ^^
[$, $END, <statement-list-tail>, $SEMICOLON, <file-names>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                           ^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <destination-file>, $GRTNOT, <source-file>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                           ^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <destination-file>, $GRTNOT, $ASCII-STR]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                           ^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, <destination-file>, $GRTNOT]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                        ^^
[$, $END, <statement-list-tail>, $SEMICOLON, <destination-file>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                           ^^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON, $ASCII-STR]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                           ^^^^^^^^^^^^^
[$, $END, <statement-list-tail>, $SEMICOLON]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                                         ^
[$, $END, <statement-list-tail>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                                           ^^^
[$, $END, <epsilon>]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                                           ^^^
[$, $END]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                                           ^^^
[$]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                                               ^
FINISHED with:
[]
begin matches = find '([A-Z a-z])*ment([A-Z a-z])*' in "input1.txt" inters find '(A|a) ([A-Z a-z])*' in "input2.txt" ; n_matches = # matches ; print ( n_matches ) ; replace '([A-Z a-z])*ment' with "" in "input1.txt" >! "output1.txt" ; end $ 
                                                                                                                                                                                                                                                 
Successfully parsed the token stream!
